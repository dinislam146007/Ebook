from aiogram.utils.markdown import hlink


def book_strings(count_books, author, book, link):
    link = link[1:].replace('/', '_', 1)
    operand = ':' if count_books < 50 else '>'

    first_text = f'üîé  –ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ –∫–Ω–∏–≥ {operand} {count_books}  üîç\n\n' \
                 f'üìñ <b>{book}</b> -- <i>{author}</i> \n' \
                 f'‚¨á –°–∫–∞—á–∞—Ç—å: /{link}\n\n'

    other_text = f'üìñ <b>{book}</b> -- <i>{author}</i> \n' \
                 f'‚¨á –°–∫–∞—á–∞—Ç—å: /{link}\n\n'
    return first_text, other_text


def author_strings(count_books, author, link):
    link = link[1:].replace('/', '_', 1)
    operand = ':' if count_books < 50 else '>'

    first_text = f'üîé –ê–≤—Ç–æ—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–æ {operand} {count_books} üîç\n\n\n' \
                 f'<b>{author}</b>\n' \
                 f'–ö–Ω–∏–≥–∏ –∞–≤—Ç–æ—Ä–∞: üìö/{link}\n\n'

    other_text = f'<b>{author}</b>\n' \
                 f'–ö–Ω–∏–≥–∏ –∞–≤—Ç–æ—Ä–∞: üìö/{link}\n\n'

    return first_text, other_text


def author_books_strings(book, link):
    link = link[1:].replace('/', '_', 1)

    text = f'üìñ<b>{book}</b>\n' \
           f'‚¨á–°–∫–∞—á–∞—Ç—å –∫–Ω–∏–≥—É: /{link}\n\n'

    return text


def series_strings(count_series, series, link):
    link = link[1:].replace('/', '_', 1)
    operand = ':' if count_series < 50 else '>'

    first_text = f'üîé –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π {operand} {count_series} üîç\n\n' \
                 f'üìö<b>{series}</b>\n' \
                 f'‚¨á–°–∫–∞—á–∞—Ç—å: /{link}\n\n'

    other_text = f'üìö<b>{series}</b>\n' \
                 f'‚¨á–°–∫–∞—á–∞—Ç—å: /{link}\n\n'

    return first_text, other_text


def series_book_strings(count_book, book, link):
    link = link[1:].replace('/', '_', 1)
    operand = ':' if count_book < 50 else '>'

    first_text = f'üìö–ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥ {operand} {count_book}\n\n' \
                 f'üìñ<b>{book}</b>\n' \
                 f'‚¨á–°–∫–∞—á–∞—Ç—å: /{link}\n\n'

    other_text = f'üìñ<b>{book}</b>\n' \
                 f'‚¨á–°–∫–∞—á–∞—Ç—å: /{link}\n\n'

    return first_text, other_text


def no_result_message(method: str):
    text = ''
    if method == 'series':
        text = '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üòî\n' \
               '–í–æ–∑–º–æ–∂–Ω–æ —Ç—ã –≤–≤–µ–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–∂–Ω–æ–π —Å–µ—Ä–∏–∏\n\n' \
               '–ù–∞–ø—Ä–∏–º–µ—Ä: \n' \
               '/series –í–ª–∞—Å—Ç–µ–ª–∏–Ω –ö–æ–ª–µ—Ü\n' \
               '/series –ü–ª–æ—Å–∫–∏–π –ú–∏—Ä'
    elif method == 'author':
        text = '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üòî\n' \
               '–í–æ–∑–º–æ–∂–Ω–æ —Ç—ã –≤–≤–µ–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –§–ò–û –∞–≤—Ç–æ—Ä–∞\n\n' \
               '–ù–∞–ø—Ä–∏–º–µ—Ä:\n' \
               '/author –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π\n' \
               '/author –°—Ç–∏–≤–µ–Ω –ö–∏–Ω–≥'
    elif method == 'book':
        text = '–ü–æ –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! üòî\n' \
               '–£–±–µ–¥–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏\n\n' \
               f'{hlink(title="–ö–∞–∫ –∏—Å–∫–∞—Ç—å –∫–Ω–∏–≥–∏ –∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", url="https://t.me/books_bar/66")}'
    return text


def message_into_bot(method: str):
    text = ''
    if method == 'series':
        text = f'–ë–æ–ª—å—à–µ –∫–Ω–∏–∂–Ω—ã—Ö —Å–µ—Ä–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –≥—Ä—É–ø–ø–µ -- @free_book_flibusta üìö\n' \
               f'–ö–Ω–∏–∂–Ω—ã–π –±–∞—Ä: @books_bar üìö'
    elif method == 'author':
        text = f'–ë–æ–ª—å—à–µ –∞–≤—Ç–æ—Ä–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –≥—Ä—É–ø–ø–µ -- @free_book_flibusta üìö\n' \
               f'–ö–Ω–∏–∂–Ω—ã–π –±–∞—Ä: @books_bar üìö'

    elif method == 'book':
        text = f'–ë–æ–ª—å—à–µ –∫–Ω–∏–≥ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –≥—Ä—É–ø–ø–µ -- @free_book_flibusta üìö\n' \
               f'–ö–Ω–∏–∂–Ω—ã–π –±–∞—Ä: @books_bar üìö'

    return text
