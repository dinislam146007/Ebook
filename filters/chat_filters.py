from aiogram import types
from aiogram.dispatcher.filters import BoundFilter

from loader import bot


class IsGroup(BoundFilter):
    async def check(self, message: types.Message):
        return message.chat.type in (types.ChatType.GROUP, types.ChatType.SUPERGROUP)


class IsPrivate(BoundFilter):
    async def check(self, message: types.Message):
        return message.chat.type == types.ChatType.PRIVATE


class IsBot(BoundFilter):
    '''
     –§–∏–ª—å—Ç—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –≤ –≥—Ä—É–ø–ø—É –Ω–µ –ø–∏—Å–∞–ª–∏ –¥—Ä—É–≥–∏–µ –±–æ—Ç—ã
    '''
    async def check(self, message: types.Message):
        isBot = message.from_user.is_bot
        telegram_bots = ['Channel_Bot', 'GroupAnonymousBot']
        if isBot and message.from_user.username not in telegram_bots:
            await bot.kick_chat_member(message.chat.id, message.from_user.id)
            await message.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.get_mention()} –±—ã–ª –∫–∏–∫–Ω—É—Ç!\n'
                                 f'–ü—Ä–∏—á–∏–Ω–∞: –≤ –≥—Ä—É–ø–ø–µ –º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ª—é–¥–∏ ü§ñ')

        return True if not isBot else False